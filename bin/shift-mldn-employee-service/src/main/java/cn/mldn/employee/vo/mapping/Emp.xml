<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mldn.employee.dao.IEmpDAO">
	<resultMap type="Emp" id="EmpResultMap">
		<id column="id" property="id"/>
		<result column="id_card" property="idCard"/>
		<result column="hire_date" property="hireDate"/>
		<result column="dimission_date" property="dimissionDate"/>
		<result column="education_degree" property="educationDegree"/>
		<result column="create_id" property="createId"/>
		<result column="last_update_user_id" property="lastUpdateUserId"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime "/>
		<result column="team_id" property="teamId"/>
		<result column="last_update_no" property="lastUpdateNo"/> 
	</resultMap>
	
	<insert id="doCreate" parameterType="Emp">
		insert into emp(name, avatar, sex, phone, id_card, birthday, hire_date, education_degree, create_id, create_time, team_id, state)
		values(#{name}, #{avatar}, #{sex}, #{phone}, #{idCard}, #{birthday}, #{hireDate}, #{educationDegree}, #{createId}, now(), #{teamId}, 1);
	</insert> 
	
	<select id="findById" parameterType="Long" resultMap="EmpResultMap"> 
		select id, name, avatar, sex, phone, id_card, birthday, hire_date, dimission_date, education_degree, create_id, last_update_user_id, create_time, update_time, team_id, team_id, state
		from emp
		where id = #{id};
	</select>
	
	<select id="findAllSplit" parameterType="map" resultMap="EmpResultMap">
		select id, name, avatar, sex, phone, id_card, birthday, hire_date, dimission_date, education_degree, create_id, last_update_user_id, create_time, update_time, team_id, team_id, state
		from emp
		<where>
			<if test="column != null and keyWord != null">
				${column} like #{keyWord} and 
			</if>
			state != -1
		</where>
		limit #{start}, #{lineSize};
	</select>
	
	<select id="getAllCount" parameterType="map" resultType="Long">
		select count(*)
		from emp
		<where>
			<if test="column != null and keyWord != null">
				${column} like #{keyWord} and 
			</if>
			state != -1
		</where>
	</select>
	
	<update id="doUpdateByDelete" parameterType="Long">
		update emp set state = -1 where id = #{id};
	</update>
</mapper>